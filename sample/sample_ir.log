found 25 extra types of 89 total, starting at tid 69
TID  KIND                INTERNAL
------------------------------------------------------------------------
 65: DPointerType        i8*
 66: DPointerType        i16*
 67: DPointerType        i32*
 68: DPointerType        i64*
 69: DArrayType          [1 x i8]
 70: DArrayType          [2 x i8]
 71: DArrayType          [3 x i8]
 72: DArrayType          [4 x i8]
 73: DArrayType          [5 x i8]
 74: DArrayType          [6 x i8]
 75: DArrayType          [7 x i8]
 76: DPointerType        [32 x i8]*
 77: DPointerType        [396 x i8]*
 78: DPointerType        [16 x i8]*
 79: DPointerType        i8**
 80: DArrayType          [1024 x i8]
 81: DPointerType        [1024 x i8]*
 82: DFunctionType       i32 func ( i32 i32 )
 83: DFunctionType       i32 func ( i32 i32 )
 84: DFunctionType       i0 func ( i0 i0 i0 i0 )
 85: DFunctionType       i0 func ( i0 i0 i0 i0 )
 86: DArrayType          [16 x i8]
 87: DArrayType          [396 x i8]
 88: DArrayType          [32 x i8]
------------------------------------------------------------------------
########################################################################
####################### Function id   0 ################################
########################################################################
found a total of 13 globals
GID  ID    VALUE
------------------------------------------------------------------------
  0 [  0]: i0 unknown
  1 [  1]: [32 x i8] unknown
  2 [  2]: [396 x i8] unknown
  3 [  3]: [16 x i8] unknown
  4 [  4]: [16 x i8] unknown
  5 [  5]: i8* unknown
  6 [  6]: i8* unknown
  7 [  7]: i8* unknown
  8 [  8]: i8* unknown
  9 [  9]: i8* unknown
 10 [ 10]: i8* unknown
 11 [ 11]: i8* unknown
 12 [ 12]: i8* unknown
------------------------------------------------------------------------
found 30 values with 0 arguments and 30 locals
VID  ID    VALUE
------------------------------------------------------------------------
  0 [  0]: alloc i64
  1 [  1]: alloc i64
  2 [  2]: alloc i8*
  3 [  3]: alloc [1024 x i8]
  4 [  4]: i8*
  5 [  5]: i32
  6 [  6]: i1
  7 [  7]: i32
  8 [  8]: i32
  9 [  9]: i32
 10 [ 10]: i32
 11 [ 11]: i1
 12 [ 12]: i64
 13 [ 13]: i64
 14 [ 14]: i64
 15 [ 15]: i32
 16 [ 16]: i8*
 17 [ 17]: i8*
 18 [ 18]: i8
 19 [ 19]: i64
 20 [ 20]: i64
 21 [ 21]: i32
 22 [ 22]: i8*
 23 [ 23]: i8*
 24 [ 24]: i8
 25 [ 25]: i1
 26 [ 26]: i64
 27 [ 27]: i32
 28 [ 28]: i64
 29 [ 29]: i32
------------------------------------------------------------------------
found a total of 23 constants
CID  ID    VALUE
------------------------------------------------------------------------
  0 [ 30]: 0(0x0)
  1 [ 31]: 0(0x0)
  2 [ 32]: 2(0x2)
  3 [ 33]: 0(0x0)
  4 [ 34]: 1024(0x400)
  5 [ 35]: 396(0x18c)
  6 [ 36]: 15(0xf)
  7 [ 37]: 1(0x1)
  8 [ 38]: 0(0x0)
  9 [ 39]: 0(0x0)
 10 [ 40]: 396(0x18c)
 11 [ 41]: 396(0x18c)
 12 [ 42]: 0(0x0)
 13 [ 43]: 396(0x18c)
 14 [ 44]: 32(0x20)
 15 [ 45]: 32(0x20)
 16 [ 46]: 32(0x20)
 17 [ 47]: 32(0x20)
 18 [ 48]: 0(0x0)
 19 [ 49]: 1(0x1)
 20 [ 50]: 0(0x0)
 21 [ 51]: 15(0xf)
 22 [ 52]: 1(0x1)
------------------------------------------------------------------------
found a total of 53 total values
------------------------------------------------------------------------
FUNCTION ID: F.0 -> NUMINSTS 40
BB   IDX  OPCODE              [ID /IID/MOD]  INST
------------------------------------------------------------------------
  0    0  OP_BC_GEPZ          [36 /184/  4]  4 = gepz p.3 + (30)
  0    1  OP_BC_CALL_API      [33 /168/  3]  5 = seek[3] (31, 32)
  0    2  OP_BC_MEMSET        [40 /200/  0]  0 = memset (p.4, 33, 34)
  0    3  OP_BC_ICMP_EQ       [21 /108/  3]  6 = (5 == 35)
  0    4  OP_BC_BRANCH        [17 / 85/  0]  br 6 ? bb.2 : bb.1

  1    5  OP_BC_CALL_API      [33 /168/  3]  7 = setvirusname[4] (p.-2147483636, 36)
  1    6  OP_BC_COPY          [34 /174/  4]  cp 37 -> 0
  1    7  OP_BC_JMP           [18 / 90/  0]  jmp bb.6

  2    8  OP_BC_CALL_API      [33 /168/  3]  8 = seek[3] (38, 39)
  2    9  OP_BC_CALL_API      [33 /168/  3]  9 = read[1] (p.4, 40)
  2   10  OP_BC_CALL_DIRECT   [32 /163/  3]  10 = call F.1 (4, 41)
  2   11  OP_BC_COPY          [34 /174/  4]  cp 42 -> 1
  2   12  OP_BC_JMP           [18 / 90/  0]  jmp bb.4

  3   13  OP_BC_ICMP_ULT      [25 /129/  4]  11 = (26 < 43)
  3   14  OP_BC_COPY          [34 /174/  4]  cp 26 -> 1
  3   15  OP_BC_BRANCH        [17 / 85/  0]  br 11 ? bb.4 : bb.5

  4   16  OP_BC_COPY          [34 /174/  4]  cp 1 -> 12
  4   17  OP_BC_SHL           [8  / 44/  4]  13 = 12 << 44
  4   18  OP_BC_ASHR          [10 / 54/  4]  14 = 13 >> 45
  4   19  OP_BC_TRUNC         [14 / 73/  3]  15 = 14 trunc ffffffffffffffff
  4   20  OP_BC_COPY          [34 /174/  4]  cp -2147483640 -> 2
  4   21  OP_BC_COPY          [34 /174/  4]  cp 2 -> 16
  4   22  OP_BC_GEP1          [35 /179/  4]  17 = gep1 p.16 + (15 * 65)
  4   23  OP_BC_LOAD          [39 /196/  1]  load  18 <- p.17
  4   24  OP_BC_SHL           [8  / 44/  4]  19 = 12 << 46
  4   25  OP_BC_ASHR          [10 / 54/  4]  20 = 19 >> 47
  4   26  OP_BC_TRUNC         [14 / 73/  3]  21 = 20 trunc ffffffffffffffff
  4   27  OP_BC_GEPZ          [36 /184/  4]  22 = gepz p.3 + (48)
  4   28  OP_BC_GEP1          [35 /179/  4]  23 = gep1 p.22 + (21 * 65)
  4   29  OP_BC_LOAD          [39 /196/  1]  load  24 <- p.23
  4   30  OP_BC_ICMP_EQ       [21 /106/  1]  25 = (18 == 24)
  4   31  OP_BC_ADD           [1  /  9/  0]  26 = 12 + 49
  4   32  OP_BC_COPY          [34 /174/  4]  cp 50 -> 0
  4   33  OP_BC_BRANCH        [17 / 85/  0]  br 25 ? bb.3 : bb.6

  5   34  OP_BC_CALL_API      [33 /168/  3]  27 = setvirusname[4] (p.-2147483638, 51)
  5   35  OP_BC_COPY          [34 /174/  4]  cp 52 -> 0
  5   36  OP_BC_JMP           [18 / 90/  0]  jmp bb.6

  6   37  OP_BC_COPY          [34 /174/  4]  cp 0 -> 28
  6   38  OP_BC_TRUNC         [14 / 73/  3]  29 = 28 trunc ffffffffffffffff
  6   39  OP_BC_RET           [19 / 98/  3]  ret 29
------------------------------------------------------------------------
########################################################################
####################### Function id   1 ################################
########################################################################
found a total of 13 globals
GID  ID    VALUE
------------------------------------------------------------------------
  0 [  0]: i0 unknown
  1 [  1]: [32 x i8] unknown
  2 [  2]: [396 x i8] unknown
  3 [  3]: [16 x i8] unknown
  4 [  4]: [16 x i8] unknown
  5 [  5]: i8* unknown
  6 [  6]: i8* unknown
  7 [  7]: i8* unknown
  8 [  8]: i8* unknown
  9 [  9]: i8* unknown
 10 [ 10]: i8* unknown
 11 [ 11]: i8* unknown
 12 [ 12]: i8* unknown
------------------------------------------------------------------------
found 303 values with 2 arguments and 301 locals
VID  ID    VALUE
------------------------------------------------------------------------
  0 [  0]: i8* argument
  1 [  1]: i32 argument
  2 [  2]: alloc i64
  3 [  3]: alloc i64
  4 [  4]: alloc i64
  5 [  5]: alloc i64
  6 [  6]: alloc i64
  7 [  7]: alloc i64
  8 [  8]: alloc i64
  9 [  9]: alloc i64
 10 [ 10]: alloc i64
 11 [ 11]: alloc i64
 12 [ 12]: alloc i8*
 13 [ 13]: alloc i8*
 14 [ 14]: alloc i8*
 15 [ 15]: alloc i8*
 16 [ 16]: alloc i8*
 17 [ 17]: alloc i8*
 18 [ 18]: alloc i8*
 19 [ 19]: i8
 20 [ 20]: i8
 21 [ 21]: i1
 22 [ 22]: i64
 23 [ 23]: i64
 24 [ 24]: i8
 25 [ 25]: i64
 26 [ 26]: i64
 27 [ 27]: i32
 28 [ 28]: i8*
 29 [ 29]: i8
 30 [ 30]: i1
 31 [ 31]: i64
 32 [ 32]: i64
 33 [ 33]: i64
 34 [ 34]: i64
 35 [ 35]: i32
 36 [ 36]: i8
 37 [ 37]: i64
 38 [ 38]: i64
 39 [ 39]: i64
 40 [ 40]: i1
 41 [ 41]: i64
 42 [ 42]: i64
 43 [ 43]: i1
 44 [ 44]: i64
 45 [ 45]: i1
 46 [ 46]: i1
 47 [ 47]: i1
 48 [ 48]: i1
 49 [ 49]: i1
 50 [ 50]: i64
 51 [ 51]: i64
 52 [ 52]: i1
 53 [ 53]: i64
 54 [ 54]: i64
 55 [ 55]: i1
 56 [ 56]: i1
 57 [ 57]: i1
 58 [ 58]: i1
 59 [ 59]: i64
 60 [ 60]: i64
 61 [ 61]: i1
 62 [ 62]: i64
 63 [ 63]: i64
 64 [ 64]: i1
 65 [ 65]: i64
 66 [ 66]: i64
 67 [ 67]: i1
 68 [ 68]: i1
 69 [ 69]: i64
 70 [ 70]: i64
 71 [ 71]: i1
 72 [ 72]: i64
 73 [ 73]: i64
 74 [ 74]: i1
 75 [ 75]: i64
 76 [ 76]: i64
 77 [ 77]: i1
 78 [ 78]: i64
 79 [ 79]: i64
 80 [ 80]: i1
 81 [ 81]: i1
 82 [ 82]: i1
 83 [ 83]: i1
 84 [ 84]: i64
 85 [ 85]: i64
 86 [ 86]: i1
 87 [ 87]: i64
 88 [ 88]: i64
 89 [ 89]: i1
 90 [ 90]: i64
 91 [ 91]: i64
 92 [ 92]: i32
 93 [ 93]: i1
 94 [ 94]: i8
 95 [ 95]: i8
 96 [ 96]: i8
 97 [ 97]: i64
 98 [ 98]: i64
 99 [ 99]: i8
100 [100]: i8
101 [101]: i8
102 [102]: i64
103 [103]: i32
104 [104]: i64
105 [105]: i64
106 [106]: i64
107 [107]: i1
108 [108]: i8
109 [109]: i8
110 [110]: i8
111 [111]: i64
112 [112]: i64
113 [113]: i8
114 [114]: i8
115 [115]: i8
116 [116]: i64
117 [117]: i64
118 [118]: i32
119 [119]: i8*
120 [120]: i8*
121 [121]: i8
122 [122]: i8
123 [123]: i64
124 [124]: i64
125 [125]: i32
126 [126]: i8*
127 [127]: i8*
128 [128]: i8
129 [129]: i8
130 [130]: i64
131 [131]: i64
132 [132]: i32
133 [133]: i8*
134 [134]: i8*
135 [135]: i8
136 [136]: i8
137 [137]: i64
138 [138]: i64
139 [139]: i8
140 [140]: i64
141 [141]: i64
142 [142]: i8
143 [143]: i64
144 [144]: i64
145 [145]: i8
146 [146]: i64
147 [147]: i64
148 [148]: i8
149 [149]: i64
150 [150]: i64
151 [151]: i32
152 [152]: i64
153 [153]: i64
154 [154]: i64
155 [155]: i64
156 [156]: i8
157 [157]: i32
158 [158]: i32
159 [159]: i1
160 [160]: i64
161 [161]: i64
162 [162]: i64
163 [163]: i64
164 [164]: i64
165 [165]: i32
166 [166]: i8
167 [167]: i64
168 [168]: i64
169 [169]: i64
170 [170]: i1
171 [171]: i64
172 [172]: i64
173 [173]: i1
174 [174]: i64
175 [175]: i1
176 [176]: i1
177 [177]: i1
178 [178]: i1
179 [179]: i1
180 [180]: i64
181 [181]: i64
182 [182]: i1
183 [183]: i64
184 [184]: i64
185 [185]: i1
186 [186]: i1
187 [187]: i1
188 [188]: i1
189 [189]: i64
190 [190]: i64
191 [191]: i1
192 [192]: i64
193 [193]: i64
194 [194]: i1
195 [195]: i64
196 [196]: i64
197 [197]: i1
198 [198]: i1
199 [199]: i64
200 [200]: i64
201 [201]: i1
202 [202]: i64
203 [203]: i64
204 [204]: i1
205 [205]: i64
206 [206]: i64
207 [207]: i1
208 [208]: i64
209 [209]: i64
210 [210]: i1
211 [211]: i1
212 [212]: i1
213 [213]: i1
214 [214]: i64
215 [215]: i64
216 [216]: i1
217 [217]: i64
218 [218]: i64
219 [219]: i1
220 [220]: i64
221 [221]: i64
222 [222]: i32
223 [223]: i8*
224 [224]: i8*
225 [225]: i8
226 [226]: i32
227 [227]: i32
228 [228]: i64
229 [229]: i64
230 [230]: i8
231 [231]: i64
232 [232]: i64
233 [233]: i8
234 [234]: i64
235 [235]: i64
236 [236]: i8
237 [237]: i64
238 [238]: i64
239 [239]: i8
240 [240]: i64
241 [241]: i64
242 [242]: i32
243 [243]: i8*
244 [244]: i8*
245 [245]: i8
246 [246]: i8
247 [247]: i64
248 [248]: i64
249 [249]: i32
250 [250]: i8*
251 [251]: i8*
252 [252]: i8
253 [253]: i8
254 [254]: i64
255 [255]: i64
256 [256]: i32
257 [257]: i8*
258 [258]: i8*
259 [259]: i8
260 [260]: i8
261 [261]: i64
262 [262]: i64
263 [263]: i32
264 [264]: i64
265 [265]: i64
266 [266]: i64
267 [267]: i1
268 [268]: i8
269 [269]: i8
270 [270]: i8
271 [271]: i64
272 [272]: i64
273 [273]: i8
274 [274]: i8
275 [275]: i8
276 [276]: i64
277 [277]: i64
278 [278]: i32
279 [279]: i1
280 [280]: i8
281 [281]: i8
282 [282]: i8
283 [283]: i64
284 [284]: i8
285 [285]: i8
286 [286]: i8
287 [287]: i64
288 [288]: i64
289 [289]: i64
290 [290]: i64
291 [291]: i8
292 [292]: i32
293 [293]: i32
294 [294]: i1
295 [295]: i64
296 [296]: i64
297 [297]: i64
298 [298]: i64
299 [299]: i8
300 [300]: i8
301 [301]: i64
302 [302]: i1
------------------------------------------------------------------------
found a total of 154 constants
CID  ID    VALUE
------------------------------------------------------------------------
  0 [303]: 7(0x7)
  1 [304]: 0(0x0)
  2 [305]: 0(0x0)
  3 [306]: 32(0x20)
  4 [307]: 32(0x20)
  5 [308]: 255(0xff)
  6 [309]: 0(0x0)
  7 [310]: 0(0x0)
  8 [311]: 4290493196(0xffbbbb0c)
  9 [312]: 1(0x1)
 10 [313]: 0(0x0)
 11 [314]: 4290772926(0xffbfffbe)
 12 [315]: 1(0x1)
 13 [316]: 0(0x0)
 14 [317]: 16(0x10)
 15 [318]: 22(0x16)
 16 [319]: 22(0x16)
 17 [320]: 22(0x16)
 18 [321]: 6(0x6)
 19 [322]: 0(0x0)
 20 [323]: 4290509612(0xffbbfb2c)
 21 [324]: 1(0x1)
 22 [325]: 0(0x0)
 23 [326]: 4290510782(0xffbbffbe)
 24 [327]: 1(0x1)
 25 [328]: 0(0x0)
 26 [329]: 18(0x12)
 27 [330]: 4(0x4)
 28 [331]: 14(0xe)
 29 [332]: 1167693828(0x45999804)
 30 [333]: 1(0x1)
 31 [334]: 0(0x0)
 32 [335]: 1167694340(0x45999a04)
 33 [336]: 1(0x1)
 34 [337]: 0(0x0)
 35 [338]: 4290492940(0xffbbba0c)
 36 [339]: 1(0x1)
 37 [340]: 0(0x0)
 38 [341]: 8(0x8)
 39 [342]: 3122798600(0xba222008)
 40 [343]: 1(0x1)
 41 [344]: 0(0x0)
 42 [345]: 9(0x9)
 43 [346]: 1166049280(0x45808000)
 44 [347]: 1(0x1)
 45 [348]: 0(0x0)
 46 [349]: 1167169536(0x45919800)
 47 [350]: 1(0x1)
 48 [351]: 0(0x0)
 49 [352]: 19(0x13)
 50 [353]: 19(0x13)
 51 [354]: 2(0x2)
 52 [355]: 71680(0x11800)
 53 [356]: 1(0x1)
 54 [357]: 0(0x0)
 55 [358]: 1166049280(0x45808000)
 56 [359]: 1(0x1)
 57 [360]: 0(0x0)
 58 [361]: 1(0x1)
 59 [362]: 20(0x14)
 60 [363]: 6(0x6)
 61 [364]: 2(0x2)
 62 [365]: 6(0x6)
 63 [366]: 2(0x2)
 64 [367]: 20(0x14)
 65 [368]: 1(0x1)
 66 [369]: 71680(0x11800)
 67 [370]: 1(0x1)
 68 [371]: 0(0x0)
 69 [372]: 2(0x2)
 70 [373]: 6(0x6)
 71 [374]: 2(0x2)
 72 [375]: 6(0x6)
 73 [376]: 1(0x1)
 74 [377]: 1(0x1)
 75 [378]: 1(0x1)
 76 [379]: 255(0xff)
 77 [380]: 1(0x1)
 78 [381]: 1(0x1)
 79 [382]: 32(0x20)
 80 [383]: 4290493196(0xffbbbb0c)
 81 [384]: 1(0x1)
 82 [385]: 0(0x0)
 83 [386]: 4290772926(0xffbfffbe)
 84 [387]: 1(0x1)
 85 [388]: 0(0x0)
 86 [389]: 16(0x10)
 87 [390]: 22(0x16)
 88 [391]: 22(0x16)
 89 [392]: 22(0x16)
 90 [393]: 6(0x6)
 91 [394]: 0(0x0)
 92 [395]: 4290509612(0xffbbfb2c)
 93 [396]: 1(0x1)
 94 [397]: 0(0x0)
 95 [398]: 4290510782(0xffbbffbe)
 96 [399]: 1(0x1)
 97 [400]: 0(0x0)
 98 [401]: 18(0x12)
 99 [402]: 4(0x4)
100 [403]: 14(0xe)
101 [404]: 1167693828(0x45999804)
102 [405]: 1(0x1)
103 [406]: 0(0x0)
104 [407]: 1167694340(0x45999a04)
105 [408]: 1(0x1)
106 [409]: 0(0x0)
107 [410]: 4290492940(0xffbbba0c)
108 [411]: 1(0x1)
109 [412]: 0(0x0)
110 [413]: 8(0x8)
111 [414]: 3122798600(0xba222008)
112 [415]: 1(0x1)
113 [416]: 0(0x0)
114 [417]: 9(0x9)
115 [418]: 1166049280(0x45808000)
116 [419]: 1(0x1)
117 [420]: 0(0x0)
118 [421]: 1167169536(0x45919800)
119 [422]: 1(0x1)
120 [423]: 0(0x0)
121 [424]: 19(0x13)
122 [425]: 19(0x13)
123 [426]: 2(0x2)
124 [427]: 71680(0x11800)
125 [428]: 1(0x1)
126 [429]: 0(0x0)
127 [430]: 1166049280(0x45808000)
128 [431]: 1(0x1)
129 [432]: 0(0x0)
130 [433]: 1(0x1)
131 [434]: 255(0xff)
132 [435]: 1(0x1)
133 [436]: 1(0x1)
134 [437]: 1(0x1)
135 [438]: 1(0x1)
136 [439]: 71680(0x11800)
137 [440]: 1(0x1)
138 [441]: 0(0x0)
139 [442]: 2(0x2)
140 [443]: 6(0x6)
141 [444]: 2(0x2)
142 [445]: 6(0x6)
143 [446]: 1(0x1)
144 [447]: 20(0x14)
145 [448]: 6(0x6)
146 [449]: 2(0x2)
147 [450]: 20(0x14)
148 [451]: 6(0x6)
149 [452]: 2(0x2)
150 [453]: 1(0x1)
151 [454]: 32(0x20)
152 [455]: 1(0x1)
153 [456]: 1(0x1)
------------------------------------------------------------------------
found a total of 457 total values
------------------------------------------------------------------------
FUNCTION ID: F.1 -> NUMINSTS 453
BB   IDX  OPCODE              [ID /IID/MOD]  INST
------------------------------------------------------------------------
  0    0  OP_BC_TRUNC         [14 / 71/  1]  19 = 1 trunc ffffffff
  0    1  OP_BC_AND           [11 / 56/  1]  20 = 19 & 303
  0    2  OP_BC_ICMP_EQ       [21 /108/  3]  21 = (1 == 304)
  0    3  OP_BC_BRANCH        [17 / 85/  0]  br 21 ? bb.92 : bb.1

  1    4  OP_BC_ZEXT          [16 / 84/  4]  22 = 1 zext ffffffff
  1    5  OP_BC_COPY          [34 /174/  4]  cp 305 -> 11
  1    6  OP_BC_JMP           [18 / 90/  0]  jmp bb.2

  2    7  OP_BC_COPY          [34 /174/  4]  cp 11 -> 23
  2    8  OP_BC_TRUNC         [14 / 71/  1]  24 = 23 trunc ffffffffffffffff
  2    9  OP_BC_SHL           [8  / 44/  4]  25 = 23 << 306
  2   10  OP_BC_ASHR          [10 / 54/  4]  26 = 25 >> 307
  2   11  OP_BC_TRUNC         [14 / 73/  3]  27 = 26 trunc ffffffffffffffff
  2   12  OP_BC_GEP1          [35 /179/  4]  28 = gep1 p.0 + (27 * 65)
  2   13  OP_BC_LOAD          [39 /196/  1]  load  29 <- p.28
  2   14  OP_BC_ICMP_SGT      [27 /136/  1]  30 = (29 > 308)
  2   15  OP_BC_SEXT          [15 / 79/  4]  31 = 24 sext 8
  2   16  OP_BC_SEXT          [15 / 79/  4]  32 = 24 sext 8
  2   17  OP_BC_COPY          [34 /174/  4]  cp 31 -> 10
  2   18  OP_BC_COPY          [34 /174/  4]  cp 309 -> 9
  2   19  OP_BC_COPY          [34 /174/  4]  cp 32 -> 6
  2   20  OP_BC_COPY          [34 /174/  4]  cp 310 -> 5
  2   21  OP_BC_BRANCH        [17 / 85/  0]  br 30 ? bb.3 : bb.45

  3   22  OP_BC_COPY          [34 /174/  4]  cp 9 -> 33
  3   23  OP_BC_COPY          [34 /174/  4]  cp 10 -> 34
  3   24  OP_BC_TRUNC         [14 / 73/  3]  35 = 33 trunc ffffffffffffffff
  3   25  OP_BC_TRUNC         [14 / 71/  1]  36 = 34 trunc ffffffffffffffff
  3   26  OP_BC_SEXT          [15 / 79/  4]  37 = 35 sext 20
  3   27  OP_BC_LSHR          [9  / 49/  4]  38 = 311 >> 37
  3   28  OP_BC_AND           [11 / 59/  4]  39 = 38 & 312
  3   29  OP_BC_ICMP_EQ       [21 /109/  4]  40 = (39 == 313)
  3   30  OP_BC_BRANCH        [17 / 85/  0]  br 40 ? bb.4 : bb.16

  4   31  OP_BC_LSHR          [9  / 49/  4]  41 = 314 >> 37
  4   32  OP_BC_AND           [11 / 59/  4]  42 = 41 & 315
  4   33  OP_BC_ICMP_EQ       [21 /109/  4]  43 = (42 == 316)
  4   34  OP_BC_BRANCH        [17 / 85/  0]  br 43 ? bb.5 : bb.11

  5   35  OP_BC_OR            [12 / 64/  4]  44 = 37 | 317
  5   36  OP_BC_ICMP_EQ       [21 /109/  4]  45 = (44 == 318)
  5   37  OP_BC_BRANCH        [17 / 85/  0]  br 45 ? bb.6 : bb.10

  6   38  OP_BC_JMP           [18 / 90/  0]  jmp bb.7

  7   39  OP_BC_ICMP_SLT      [30 /153/  3]  46 = (35 < 319)
  7   40  OP_BC_BRANCH        [17 / 85/  0]  br 46 ? bb.9 : bb.8

  8   41  OP_BC_ICMP_EQ       [21 /108/  3]  47 = (35 == 320)
  8   42  OP_BC_BRANCH        [17 / 85/  0]  br 47 ? bb.39 : bb.88

  9   43  OP_BC_ICMP_EQ       [21 /108/  3]  48 = (35 == 321)
  9   44  OP_BC_BRANCH        [17 / 85/  0]  br 48 ? bb.37 : bb.88

 10   45  OP_BC_ICMP_EQ       [21 /108/  3]  49 = (35 == 322)
 10   46  OP_BC_BRANCH        [17 / 85/  0]  br 49 ? bb.36 : bb.92

 11   47  OP_BC_LSHR          [9  / 49/  4]  50 = 323 >> 37
 11   48  OP_BC_AND           [11 / 59/  4]  51 = 50 & 324
 11   49  OP_BC_ICMP_EQ       [21 /109/  4]  52 = (51 == 325)
 11   50  OP_BC_BRANCH        [17 / 85/  0]  br 52 ? bb.12 : bb.15

 12   51  OP_BC_LSHR          [9  / 49/  4]  53 = 326 >> 37
 12   52  OP_BC_AND           [11 / 59/  4]  54 = 53 & 327
 12   53  OP_BC_ICMP_EQ       [21 /109/  4]  55 = (54 == 328)
 12   54  OP_BC_BRANCH        [17 / 85/  0]  br 55 ? bb.13 : bb.14

 13   55  OP_BC_ICMP_EQ       [21 /108/  3]  56 = (35 == 329)
 13   56  OP_BC_BRANCH        [17 / 85/  0]  br 56 ? bb.41 : bb.92

 14   57  OP_BC_ICMP_EQ       [21 /108/  3]  57 = (35 == 330)
 14   58  OP_BC_BRANCH        [17 / 85/  0]  br 57 ? bb.38 : bb.92

 15   59  OP_BC_ICMP_EQ       [21 /108/  3]  58 = (35 == 331)
 15   60  OP_BC_BRANCH        [17 / 85/  0]  br 58 ? bb.40 : bb.92

 16   61  OP_BC_LSHR          [9  / 49/  4]  59 = 332 >> 37
 16   62  OP_BC_AND           [11 / 59/  4]  60 = 59 & 333
 16   63  OP_BC_ICMP_EQ       [21 /109/  4]  61 = (60 == 334)
 16   64  OP_BC_BRANCH        [17 / 85/  0]  br 61 ? bb.17 : bb.22

 17   65  OP_BC_LSHR          [9  / 49/  4]  62 = 335 >> 37
 17   66  OP_BC_AND           [11 / 59/  4]  63 = 62 & 336
 17   67  OP_BC_ICMP_EQ       [21 /109/  4]  64 = (63 == 337)
 17   68  OP_BC_BRANCH        [17 / 85/  0]  br 64 ? bb.18 : bb.21

 18   69  OP_BC_LSHR          [9  / 49/  4]  65 = 338 >> 37
 18   70  OP_BC_AND           [11 / 59/  4]  66 = 65 & 339
 18   71  OP_BC_ICMP_EQ       [21 /109/  4]  67 = (66 == 340)
 18   72  OP_BC_BRANCH        [17 / 85/  0]  br 67 ? bb.19 : bb.20

 19   73  OP_BC_ICMP_EQ       [21 /108/  3]  68 = (35 == 341)
 19   74  OP_BC_BRANCH        [17 / 85/  0]  br 68 ? bb.42 : bb.92

 20   75  OP_BC_LSHR          [9  / 49/  4]  69 = 342 >> 37
 20   76  OP_BC_AND           [11 / 59/  4]  70 = 69 & 343
 20   77  OP_BC_ICMP_EQ       [21 /109/  4]  71 = (70 == 344)
 20   78  OP_BC_SEXT          [15 / 79/  4]  72 = 35 sext 20
 20   79  OP_BC_SEXT          [15 / 79/  4]  73 = 36 sext 8
 20   80  OP_BC_COPY          [34 /174/  4]  cp 72 -> 8
 20   81  OP_BC_COPY          [34 /174/  4]  cp 73 -> 7
 20   82  OP_BC_BRANCH        [17 / 85/  0]  br 71 ? bb.92 : bb.44

 21   83  OP_BC_ICMP_EQ       [21 /108/  3]  74 = (35 == 345)
 21   84  OP_BC_BRANCH        [17 / 85/  0]  br 74 ? bb.43 : bb.92

 22   85  OP_BC_LSHR          [9  / 49/  4]  75 = 346 >> 37
 22   86  OP_BC_AND           [11 / 59/  4]  76 = 75 & 347
 22   87  OP_BC_ICMP_EQ       [21 /109/  4]  77 = (76 == 348)
 22   88  OP_BC_BRANCH        [17 / 85/  0]  br 77 ? bb.23 : bb.29

 23   89  OP_BC_LSHR          [9  / 49/  4]  78 = 349 >> 37
 23   90  OP_BC_AND           [11 / 59/  4]  79 = 78 & 350
 23   91  OP_BC_ICMP_EQ       [21 /109/  4]  80 = (79 == 351)
 23   92  OP_BC_BRANCH        [17 / 85/  0]  br 80 ? bb.24 : bb.28

 24   93  OP_BC_JMP           [18 / 90/  0]  jmp bb.25

 25   94  OP_BC_ICMP_SLT      [30 /153/  3]  81 = (35 < 352)
 25   95  OP_BC_BRANCH        [17 / 85/  0]  br 81 ? bb.27 : bb.26

 26   96  OP_BC_ICMP_EQ       [21 /108/  3]  82 = (35 == 353)
 26   97  OP_BC_BRANCH        [17 / 85/  0]  br 82 ? bb.30 : bb.89

 27   98  OP_BC_ICMP_EQ       [21 /108/  3]  83 = (35 == 354)
 27   99  OP_BC_BRANCH        [17 / 85/  0]  br 83 ? bb.30 : bb.89

 28  100  OP_BC_LSHR          [9  / 49/  4]  84 = 355 >> 37
 28  101  OP_BC_AND           [11 / 59/  4]  85 = 84 & 356
 28  102  OP_BC_ICMP_EQ       [21 /109/  4]  86 = (85 == 357)
 28  103  OP_BC_BRANCH        [17 / 85/  0]  br 86 ? bb.92 : bb.33

 29  104  OP_BC_LSHR          [9  / 49/  4]  87 = 358 >> 37
 29  105  OP_BC_AND           [11 / 59/  4]  88 = 87 & 359
 29  106  OP_BC_ICMP_EQ       [21 /109/  4]  89 = (88 == 360)
 29  107  OP_BC_SEXT          [15 / 79/  4]  90 = 35 sext 20
 29  108  OP_BC_SEXT          [15 / 79/  4]  91 = 36 sext 8
 29  109  OP_BC_COPY          [34 /174/  4]  cp 90 -> 8
 29  110  OP_BC_COPY          [34 /174/  4]  cp 91 -> 7
 29  111  OP_BC_BRANCH        [17 / 85/  0]  br 89 ? bb.92 : bb.44

 30  112  OP_BC_ADD           [1  /  8/  0]  92 = 35 + 361
 30  113  OP_BC_ICMP_EQ       [21 /108/  3]  93 = (92 == 362)
 30  114  OP_BC_BRANCH        [17 / 85/  0]  br 93 ? bb.32 : bb.31

 31  115  OP_BC_SHL           [8  / 41/  1]  94 = 36 << 363
 31  116  OP_BC_LSHR          [9  / 46/  1]  95 = 36 >> 364
 31  117  OP_BC_OR            [12 / 61/  1]  96 = 94 | 95
 31  118  OP_BC_SEXT          [15 / 79/  4]  97 = 92 sext 20
 31  119  OP_BC_SEXT          [15 / 79/  4]  98 = 96 sext 8
 31  120  OP_BC_COPY          [34 /174/  4]  cp 97 -> 8
 31  121  OP_BC_COPY          [34 /174/  4]  cp 98 -> 7
 31  122  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 32  123  OP_BC_LSHR          [9  / 46/  1]  99 = 36 >> 365
 32  124  OP_BC_SHL           [8  / 41/  1]  100 = 36 << 366
 32  125  OP_BC_OR            [12 / 61/  1]  101 = 99 | 100
 32  126  OP_BC_SEXT          [15 / 79/  4]  102 = 101 sext 8
 32  127  OP_BC_COPY          [34 /174/  4]  cp 367 -> 8
 32  128  OP_BC_COPY          [34 /174/  4]  cp 102 -> 7
 32  129  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 33  130  OP_BC_ADD           [1  /  8/  0]  103 = 35 + 368
 33  131  OP_BC_ZEXT          [16 / 84/  4]  104 = 103 zext ffffffff
 33  132  OP_BC_LSHR          [9  / 49/  4]  105 = 369 >> 104
 33  133  OP_BC_AND           [11 / 59/  4]  106 = 105 & 370
 33  134  OP_BC_ICMP_EQ       [21 /109/  4]  107 = (106 == 371)
 33  135  OP_BC_BRANCH        [17 / 85/  0]  br 107 ? bb.35 : bb.34

 34  136  OP_BC_SHL           [8  / 41/  1]  108 = 36 << 372
 34  137  OP_BC_LSHR          [9  / 46/  1]  109 = 36 >> 373
 34  138  OP_BC_OR            [12 / 61/  1]  110 = 108 | 109
 34  139  OP_BC_SEXT          [15 / 79/  4]  111 = 103 sext 20
 34  140  OP_BC_SEXT          [15 / 79/  4]  112 = 110 sext 8
 34  141  OP_BC_COPY          [34 /174/  4]  cp 111 -> 8
 34  142  OP_BC_COPY          [34 /174/  4]  cp 112 -> 7
 34  143  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 35  144  OP_BC_LSHR          [9  / 46/  1]  113 = 36 >> 374
 35  145  OP_BC_SHL           [8  / 41/  1]  114 = 36 << 375
 35  146  OP_BC_OR            [12 / 61/  1]  115 = 113 | 114
 35  147  OP_BC_SEXT          [15 / 79/  4]  116 = 103 sext 20
 35  148  OP_BC_SEXT          [15 / 79/  4]  117 = 115 sext 8
 35  149  OP_BC_COPY          [34 /174/  4]  cp 116 -> 8
 35  150  OP_BC_COPY          [34 /174/  4]  cp 117 -> 7
 35  151  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 36  152  OP_BC_ADD           [1  /  8/  0]  118 = 35 + 376
 36  153  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 18
 36  154  OP_BC_COPY          [34 /174/  4]  cp 18 -> 119
 36  155  OP_BC_GEP1          [35 /179/  4]  120 = gep1 p.119 + (118 * 65)
 36  156  OP_BC_LOAD          [39 /196/  1]  load  121 <- p.120
 36  157  OP_BC_SUB           [2  / 11/  1]  122 = 36 - 121
 36  158  OP_BC_SEXT          [15 / 79/  4]  123 = 118 sext 20
 36  159  OP_BC_SEXT          [15 / 79/  4]  124 = 122 sext 8
 36  160  OP_BC_COPY          [34 /174/  4]  cp 123 -> 8
 36  161  OP_BC_COPY          [34 /174/  4]  cp 124 -> 7
 36  162  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 37  163  OP_BC_ADD           [1  /  8/  0]  125 = 35 + 377
 37  164  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 17
 37  165  OP_BC_COPY          [34 /174/  4]  cp 17 -> 126
 37  166  OP_BC_GEP1          [35 /179/  4]  127 = gep1 p.126 + (125 * 65)
 37  167  OP_BC_LOAD          [39 /196/  1]  load  128 <- p.127
 37  168  OP_BC_XOR           [13 / 66/  1]  129 = 128 ^ 36
 37  169  OP_BC_SEXT          [15 / 79/  4]  130 = 125 sext 20
 37  170  OP_BC_SEXT          [15 / 79/  4]  131 = 129 sext 8
 37  171  OP_BC_COPY          [34 /174/  4]  cp 130 -> 8
 37  172  OP_BC_COPY          [34 /174/  4]  cp 131 -> 7
 37  173  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 38  174  OP_BC_ADD           [1  /  8/  0]  132 = 35 + 378
 38  175  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 16
 38  176  OP_BC_COPY          [34 /174/  4]  cp 16 -> 133
 38  177  OP_BC_GEP1          [35 /179/  4]  134 = gep1 p.133 + (132 * 65)
 38  178  OP_BC_LOAD          [39 /196/  1]  load  135 <- p.134
 38  179  OP_BC_ADD           [1  /  6/  0]  136 = 135 + 36
 38  180  OP_BC_SEXT          [15 / 79/  4]  137 = 132 sext 20
 38  181  OP_BC_SEXT          [15 / 79/  4]  138 = 136 sext 8
 38  182  OP_BC_COPY          [34 /174/  4]  cp 137 -> 8
 38  183  OP_BC_COPY          [34 /174/  4]  cp 138 -> 7
 38  184  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 39  185  OP_BC_XOR           [13 / 66/  1]  139 = 36 ^ 20
 39  186  OP_BC_SEXT          [15 / 79/  4]  140 = 35 sext 20
 39  187  OP_BC_SEXT          [15 / 79/  4]  141 = 139 sext 8
 39  188  OP_BC_COPY          [34 /174/  4]  cp 140 -> 8
 39  189  OP_BC_COPY          [34 /174/  4]  cp 141 -> 7
 39  190  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 40  191  OP_BC_ADD           [1  /  6/  0]  142 = 36 + 20
 40  192  OP_BC_SEXT          [15 / 79/  4]  143 = 35 sext 20
 40  193  OP_BC_SEXT          [15 / 79/  4]  144 = 142 sext 8
 40  194  OP_BC_COPY          [34 /174/  4]  cp 143 -> 8
 40  195  OP_BC_COPY          [34 /174/  4]  cp 144 -> 7
 40  196  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 41  197  OP_BC_SUB           [2  / 11/  1]  145 = 36 - 20
 41  198  OP_BC_SEXT          [15 / 79/  4]  146 = 35 sext 20
 41  199  OP_BC_SEXT          [15 / 79/  4]  147 = 145 sext 8
 41  200  OP_BC_COPY          [34 /174/  4]  cp 146 -> 8
 41  201  OP_BC_COPY          [34 /174/  4]  cp 147 -> 7
 41  202  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 42  203  OP_BC_ADD           [1  /  6/  0]  148 = 36 + 379
 42  204  OP_BC_SEXT          [15 / 79/  4]  149 = 35 sext 20
 42  205  OP_BC_SEXT          [15 / 79/  4]  150 = 148 sext 8
 42  206  OP_BC_COPY          [34 /174/  4]  cp 149 -> 8
 42  207  OP_BC_COPY          [34 /174/  4]  cp 150 -> 7
 42  208  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 43  209  OP_BC_ADD           [1  /  8/  0]  151 = 35 + 380
 43  210  OP_BC_SEXT          [15 / 79/  4]  152 = 151 sext 20
 43  211  OP_BC_SEXT          [15 / 79/  4]  153 = 36 sext 8
 43  212  OP_BC_COPY          [34 /174/  4]  cp 152 -> 8
 43  213  OP_BC_COPY          [34 /174/  4]  cp 153 -> 7
 43  214  OP_BC_JMP           [18 / 90/  0]  jmp bb.44

 44  215  OP_BC_COPY          [34 /174/  4]  cp 7 -> 154
 44  216  OP_BC_COPY          [34 /174/  4]  cp 8 -> 155
 44  217  OP_BC_TRUNC         [14 / 71/  1]  156 = 154 trunc ffffffffffffffff
 44  218  OP_BC_TRUNC         [14 / 73/  3]  157 = 155 trunc ffffffffffffffff
 44  219  OP_BC_ADD           [1  /  8/  0]  158 = 157 + 381
 44  220  OP_BC_ICMP_ULT      [25 /128/  3]  159 = (158 < 382)
 44  221  OP_BC_SEXT          [15 / 79/  4]  160 = 156 sext 8
 44  222  OP_BC_SEXT          [15 / 79/  4]  161 = 158 sext 20
 44  223  OP_BC_SEXT          [15 / 79/  4]  162 = 156 sext 8
 44  224  OP_BC_COPY          [34 /174/  4]  cp 160 -> 10
 44  225  OP_BC_COPY          [34 /174/  4]  cp 161 -> 9
 44  226  OP_BC_COPY          [34 /174/  4]  cp 162 -> 2
 44  227  OP_BC_BRANCH        [17 / 85/  0]  br 159 ? bb.3 : bb.87

 45  228  OP_BC_COPY          [34 /174/  4]  cp 5 -> 163
 45  229  OP_BC_COPY          [34 /174/  4]  cp 6 -> 164
 45  230  OP_BC_TRUNC         [14 / 73/  3]  165 = 163 trunc ffffffffffffffff
 45  231  OP_BC_TRUNC         [14 / 71/  1]  166 = 164 trunc ffffffffffffffff
 45  232  OP_BC_SEXT          [15 / 79/  4]  167 = 165 sext 20
 45  233  OP_BC_LSHR          [9  / 49/  4]  168 = 383 >> 167
 45  234  OP_BC_AND           [11 / 59/  4]  169 = 168 & 384
 45  235  OP_BC_ICMP_EQ       [21 /109/  4]  170 = (169 == 385)
 45  236  OP_BC_BRANCH        [17 / 85/  0]  br 170 ? bb.46 : bb.58

 46  237  OP_BC_LSHR          [9  / 49/  4]  171 = 386 >> 167
 46  238  OP_BC_AND           [11 / 59/  4]  172 = 171 & 387
 46  239  OP_BC_ICMP_EQ       [21 /109/  4]  173 = (172 == 388)
 46  240  OP_BC_BRANCH        [17 / 85/  0]  br 173 ? bb.47 : bb.53

 47  241  OP_BC_OR            [12 / 64/  4]  174 = 167 | 389
 47  242  OP_BC_ICMP_EQ       [21 /109/  4]  175 = (174 == 390)
 47  243  OP_BC_BRANCH        [17 / 85/  0]  br 175 ? bb.48 : bb.52

 48  244  OP_BC_JMP           [18 / 90/  0]  jmp bb.49

 49  245  OP_BC_ICMP_SLT      [30 /153/  3]  176 = (165 < 391)
 49  246  OP_BC_BRANCH        [17 / 85/  0]  br 176 ? bb.51 : bb.50

 50  247  OP_BC_ICMP_EQ       [21 /108/  3]  177 = (165 == 392)
 50  248  OP_BC_BRANCH        [17 / 85/  0]  br 177 ? bb.76 : bb.90

 51  249  OP_BC_ICMP_EQ       [21 /108/  3]  178 = (165 == 393)
 51  250  OP_BC_BRANCH        [17 / 85/  0]  br 178 ? bb.78 : bb.90

 52  251  OP_BC_ICMP_EQ       [21 /108/  3]  179 = (165 == 394)
 52  252  OP_BC_BRANCH        [17 / 85/  0]  br 179 ? bb.79 : bb.92

 53  253  OP_BC_LSHR          [9  / 49/  4]  180 = 395 >> 167
 53  254  OP_BC_AND           [11 / 59/  4]  181 = 180 & 396
 53  255  OP_BC_ICMP_EQ       [21 /109/  4]  182 = (181 == 397)
 53  256  OP_BC_BRANCH        [17 / 85/  0]  br 182 ? bb.54 : bb.57

 54  257  OP_BC_LSHR          [9  / 49/  4]  183 = 398 >> 167
 54  258  OP_BC_AND           [11 / 59/  4]  184 = 183 & 399
 54  259  OP_BC_ICMP_EQ       [21 /109/  4]  185 = (184 == 400)
 54  260  OP_BC_BRANCH        [17 / 85/  0]  br 185 ? bb.55 : bb.56

 55  261  OP_BC_ICMP_EQ       [21 /108/  3]  186 = (165 == 401)
 55  262  OP_BC_BRANCH        [17 / 85/  0]  br 186 ? bb.74 : bb.92

 56  263  OP_BC_ICMP_EQ       [21 /108/  3]  187 = (165 == 402)
 56  264  OP_BC_BRANCH        [17 / 85/  0]  br 187 ? bb.77 : bb.92

 57  265  OP_BC_ICMP_EQ       [21 /108/  3]  188 = (165 == 403)
 57  266  OP_BC_BRANCH        [17 / 85/  0]  br 188 ? bb.75 : bb.92

 58  267  OP_BC_LSHR          [9  / 49/  4]  189 = 404 >> 167
 58  268  OP_BC_AND           [11 / 59/  4]  190 = 189 & 405
 58  269  OP_BC_ICMP_EQ       [21 /109/  4]  191 = (190 == 406)
 58  270  OP_BC_BRANCH        [17 / 85/  0]  br 191 ? bb.59 : bb.64

 59  271  OP_BC_LSHR          [9  / 49/  4]  192 = 407 >> 167
 59  272  OP_BC_AND           [11 / 59/  4]  193 = 192 & 408
 59  273  OP_BC_ICMP_EQ       [21 /109/  4]  194 = (193 == 409)
 59  274  OP_BC_BRANCH        [17 / 85/  0]  br 194 ? bb.60 : bb.63

 60  275  OP_BC_LSHR          [9  / 49/  4]  195 = 410 >> 167
 60  276  OP_BC_AND           [11 / 59/  4]  196 = 195 & 411
 60  277  OP_BC_ICMP_EQ       [21 /109/  4]  197 = (196 == 412)
 60  278  OP_BC_BRANCH        [17 / 85/  0]  br 197 ? bb.61 : bb.62

 61  279  OP_BC_ICMP_EQ       [21 /108/  3]  198 = (165 == 413)
 61  280  OP_BC_BRANCH        [17 / 85/  0]  br 198 ? bb.73 : bb.92

 62  281  OP_BC_LSHR          [9  / 49/  4]  199 = 414 >> 167
 62  282  OP_BC_AND           [11 / 59/  4]  200 = 199 & 415
 62  283  OP_BC_ICMP_EQ       [21 /109/  4]  201 = (200 == 416)
 62  284  OP_BC_SEXT          [15 / 79/  4]  202 = 165 sext 20
 62  285  OP_BC_SEXT          [15 / 79/  4]  203 = 166 sext 8
 62  286  OP_BC_COPY          [34 /174/  4]  cp 202 -> 4
 62  287  OP_BC_COPY          [34 /174/  4]  cp 203 -> 3
 62  288  OP_BC_BRANCH        [17 / 85/  0]  br 201 ? bb.92 : bb.86

 63  289  OP_BC_ICMP_EQ       [21 /108/  3]  204 = (165 == 417)
 63  290  OP_BC_BRANCH        [17 / 85/  0]  br 204 ? bb.72 : bb.92

 64  291  OP_BC_LSHR          [9  / 49/  4]  205 = 418 >> 167
 64  292  OP_BC_AND           [11 / 59/  4]  206 = 205 & 419
 64  293  OP_BC_ICMP_EQ       [21 /109/  4]  207 = (206 == 420)
 64  294  OP_BC_BRANCH        [17 / 85/  0]  br 207 ? bb.65 : bb.71

 65  295  OP_BC_LSHR          [9  / 49/  4]  208 = 421 >> 167
 65  296  OP_BC_AND           [11 / 59/  4]  209 = 208 & 422
 65  297  OP_BC_ICMP_EQ       [21 /109/  4]  210 = (209 == 423)
 65  298  OP_BC_BRANCH        [17 / 85/  0]  br 210 ? bb.66 : bb.70

 66  299  OP_BC_JMP           [18 / 90/  0]  jmp bb.67

 67  300  OP_BC_ICMP_SLT      [30 /153/  3]  211 = (165 < 424)
 67  301  OP_BC_BRANCH        [17 / 85/  0]  br 211 ? bb.69 : bb.68

 68  302  OP_BC_ICMP_EQ       [21 /108/  3]  212 = (165 == 425)
 68  303  OP_BC_BRANCH        [17 / 85/  0]  br 212 ? bb.83 : bb.91

 69  304  OP_BC_ICMP_EQ       [21 /108/  3]  213 = (165 == 426)
 69  305  OP_BC_BRANCH        [17 / 85/  0]  br 213 ? bb.83 : bb.91

 70  306  OP_BC_LSHR          [9  / 49/  4]  214 = 427 >> 167
 70  307  OP_BC_AND           [11 / 59/  4]  215 = 214 & 428
 70  308  OP_BC_ICMP_EQ       [21 /109/  4]  216 = (215 == 429)
 70  309  OP_BC_BRANCH        [17 / 85/  0]  br 216 ? bb.92 : bb.80

 71  310  OP_BC_LSHR          [9  / 49/  4]  217 = 430 >> 167
 71  311  OP_BC_AND           [11 / 59/  4]  218 = 217 & 431
 71  312  OP_BC_ICMP_EQ       [21 /109/  4]  219 = (218 == 432)
 71  313  OP_BC_SEXT          [15 / 79/  4]  220 = 165 sext 20
 71  314  OP_BC_SEXT          [15 / 79/  4]  221 = 166 sext 8
 71  315  OP_BC_COPY          [34 /174/  4]  cp 220 -> 4
 71  316  OP_BC_COPY          [34 /174/  4]  cp 221 -> 3
 71  317  OP_BC_BRANCH        [17 / 85/  0]  br 219 ? bb.92 : bb.86

 72  318  OP_BC_ADD           [1  /  8/  0]  222 = 165 + 433
 72  319  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 15
 72  320  OP_BC_COPY          [34 /174/  4]  cp 15 -> 223
 72  321  OP_BC_GEP1          [35 /179/  4]  224 = gep1 p.223 + (222 * 65)
 72  322  OP_BC_LOAD          [39 /196/  1]  load  225 <- p.224
 72  323  OP_BC_SEXT          [15 / 78/  3]  226 = 225 sext 8
 72  324  OP_BC_ADD           [1  /  8/  0]  227 = 222 + 226
 72  325  OP_BC_SEXT          [15 / 79/  4]  228 = 227 sext 20
 72  326  OP_BC_SEXT          [15 / 79/  4]  229 = 166 sext 8
 72  327  OP_BC_COPY          [34 /174/  4]  cp 228 -> 4
 72  328  OP_BC_COPY          [34 /174/  4]  cp 229 -> 3
 72  329  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 73  330  OP_BC_ADD           [1  /  6/  0]  230 = 166 + 434
 73  331  OP_BC_SEXT          [15 / 79/  4]  231 = 165 sext 20
 73  332  OP_BC_SEXT          [15 / 79/  4]  232 = 230 sext 8
 73  333  OP_BC_COPY          [34 /174/  4]  cp 231 -> 4
 73  334  OP_BC_COPY          [34 /174/  4]  cp 232 -> 3
 73  335  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 74  336  OP_BC_SUB           [2  / 11/  1]  233 = 166 - 20
 74  337  OP_BC_SEXT          [15 / 79/  4]  234 = 165 sext 20
 74  338  OP_BC_SEXT          [15 / 79/  4]  235 = 233 sext 8
 74  339  OP_BC_COPY          [34 /174/  4]  cp 234 -> 4
 74  340  OP_BC_COPY          [34 /174/  4]  cp 235 -> 3
 74  341  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 75  342  OP_BC_ADD           [1  /  6/  0]  236 = 166 + 20
 75  343  OP_BC_SEXT          [15 / 79/  4]  237 = 165 sext 20
 75  344  OP_BC_SEXT          [15 / 79/  4]  238 = 236 sext 8
 75  345  OP_BC_COPY          [34 /174/  4]  cp 237 -> 4
 75  346  OP_BC_COPY          [34 /174/  4]  cp 238 -> 3
 75  347  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 76  348  OP_BC_XOR           [13 / 66/  1]  239 = 166 ^ 20
 76  349  OP_BC_SEXT          [15 / 79/  4]  240 = 165 sext 20
 76  350  OP_BC_SEXT          [15 / 79/  4]  241 = 239 sext 8
 76  351  OP_BC_COPY          [34 /174/  4]  cp 240 -> 4
 76  352  OP_BC_COPY          [34 /174/  4]  cp 241 -> 3
 76  353  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 77  354  OP_BC_ADD           [1  /  8/  0]  242 = 165 + 435
 77  355  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 14
 77  356  OP_BC_COPY          [34 /174/  4]  cp 14 -> 243
 77  357  OP_BC_GEP1          [35 /179/  4]  244 = gep1 p.243 + (242 * 65)
 77  358  OP_BC_LOAD          [39 /196/  1]  load  245 <- p.244
 77  359  OP_BC_ADD           [1  /  6/  0]  246 = 245 + 166
 77  360  OP_BC_SEXT          [15 / 79/  4]  247 = 242 sext 20
 77  361  OP_BC_SEXT          [15 / 79/  4]  248 = 246 sext 8
 77  362  OP_BC_COPY          [34 /174/  4]  cp 247 -> 4
 77  363  OP_BC_COPY          [34 /174/  4]  cp 248 -> 3
 77  364  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 78  365  OP_BC_ADD           [1  /  8/  0]  249 = 165 + 436
 78  366  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 13
 78  367  OP_BC_COPY          [34 /174/  4]  cp 13 -> 250
 78  368  OP_BC_GEP1          [35 /179/  4]  251 = gep1 p.250 + (249 * 65)
 78  369  OP_BC_LOAD          [39 /196/  1]  load  252 <- p.251
 78  370  OP_BC_XOR           [13 / 66/  1]  253 = 252 ^ 166
 78  371  OP_BC_SEXT          [15 / 79/  4]  254 = 249 sext 20
 78  372  OP_BC_SEXT          [15 / 79/  4]  255 = 253 sext 8
 78  373  OP_BC_COPY          [34 /174/  4]  cp 254 -> 4
 78  374  OP_BC_COPY          [34 /174/  4]  cp 255 -> 3
 78  375  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 79  376  OP_BC_ADD           [1  /  8/  0]  256 = 165 + 437
 79  377  OP_BC_COPY          [34 /174/  4]  cp -2147483642 -> 12
 79  378  OP_BC_COPY          [34 /174/  4]  cp 12 -> 257
 79  379  OP_BC_GEP1          [35 /179/  4]  258 = gep1 p.257 + (256 * 65)
 79  380  OP_BC_LOAD          [39 /196/  1]  load  259 <- p.258
 79  381  OP_BC_SUB           [2  / 11/  1]  260 = 166 - 259
 79  382  OP_BC_SEXT          [15 / 79/  4]  261 = 256 sext 20
 79  383  OP_BC_SEXT          [15 / 79/  4]  262 = 260 sext 8
 79  384  OP_BC_COPY          [34 /174/  4]  cp 261 -> 4
 79  385  OP_BC_COPY          [34 /174/  4]  cp 262 -> 3
 79  386  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 80  387  OP_BC_ADD           [1  /  8/  0]  263 = 165 + 438
 80  388  OP_BC_ZEXT          [16 / 84/  4]  264 = 263 zext ffffffff
 80  389  OP_BC_LSHR          [9  / 49/  4]  265 = 439 >> 264
 80  390  OP_BC_AND           [11 / 59/  4]  266 = 265 & 440
 80  391  OP_BC_ICMP_EQ       [21 /109/  4]  267 = (266 == 441)
 80  392  OP_BC_BRANCH        [17 / 85/  0]  br 267 ? bb.82 : bb.81

 81  393  OP_BC_SHL           [8  / 41/  1]  268 = 166 << 442
 81  394  OP_BC_LSHR          [9  / 46/  1]  269 = 166 >> 443
 81  395  OP_BC_OR            [12 / 61/  1]  270 = 268 | 269
 81  396  OP_BC_SEXT          [15 / 79/  4]  271 = 263 sext 20
 81  397  OP_BC_SEXT          [15 / 79/  4]  272 = 270 sext 8
 81  398  OP_BC_COPY          [34 /174/  4]  cp 271 -> 4
 81  399  OP_BC_COPY          [34 /174/  4]  cp 272 -> 3
 81  400  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 82  401  OP_BC_LSHR          [9  / 46/  1]  273 = 166 >> 444
 82  402  OP_BC_SHL           [8  / 41/  1]  274 = 166 << 445
 82  403  OP_BC_OR            [12 / 61/  1]  275 = 273 | 274
 82  404  OP_BC_SEXT          [15 / 79/  4]  276 = 263 sext 20
 82  405  OP_BC_SEXT          [15 / 79/  4]  277 = 275 sext 8
 82  406  OP_BC_COPY          [34 /174/  4]  cp 276 -> 4
 82  407  OP_BC_COPY          [34 /174/  4]  cp 277 -> 3
 82  408  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 83  409  OP_BC_ADD           [1  /  8/  0]  278 = 165 + 446
 83  410  OP_BC_ICMP_EQ       [21 /108/  3]  279 = (278 == 447)
 83  411  OP_BC_BRANCH        [17 / 85/  0]  br 279 ? bb.84 : bb.85

 84  412  OP_BC_LSHR          [9  / 46/  1]  280 = 166 >> 448
 84  413  OP_BC_SHL           [8  / 41/  1]  281 = 166 << 449
 84  414  OP_BC_OR            [12 / 61/  1]  282 = 280 | 281
 84  415  OP_BC_SEXT          [15 / 79/  4]  283 = 282 sext 8
 84  416  OP_BC_COPY          [34 /174/  4]  cp 450 -> 4
 84  417  OP_BC_COPY          [34 /174/  4]  cp 283 -> 3
 84  418  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 85  419  OP_BC_SHL           [8  / 41/  1]  284 = 166 << 451
 85  420  OP_BC_LSHR          [9  / 46/  1]  285 = 166 >> 452
 85  421  OP_BC_OR            [12 / 61/  1]  286 = 284 | 285
 85  422  OP_BC_SEXT          [15 / 79/  4]  287 = 278 sext 20
 85  423  OP_BC_SEXT          [15 / 79/  4]  288 = 286 sext 8
 85  424  OP_BC_COPY          [34 /174/  4]  cp 287 -> 4
 85  425  OP_BC_COPY          [34 /174/  4]  cp 288 -> 3
 85  426  OP_BC_JMP           [18 / 90/  0]  jmp bb.86

 86  427  OP_BC_COPY          [34 /174/  4]  cp 3 -> 289
 86  428  OP_BC_COPY          [34 /174/  4]  cp 4 -> 290
 86  429  OP_BC_TRUNC         [14 / 71/  1]  291 = 289 trunc ffffffffffffffff
 86  430  OP_BC_TRUNC         [14 / 73/  3]  292 = 290 trunc ffffffffffffffff
 86  431  OP_BC_ADD           [1  /  8/  0]  293 = 292 + 453
 86  432  OP_BC_ICMP_ULT      [25 /128/  3]  294 = (293 < 454)
 86  433  OP_BC_SEXT          [15 / 79/  4]  295 = 291 sext 8
 86  434  OP_BC_SEXT          [15 / 79/  4]  296 = 293 sext 20
 86  435  OP_BC_SEXT          [15 / 79/  4]  297 = 291 sext 8
 86  436  OP_BC_COPY          [34 /174/  4]  cp 295 -> 6
 86  437  OP_BC_COPY          [34 /174/  4]  cp 296 -> 5
 86  438  OP_BC_COPY          [34 /174/  4]  cp 297 -> 2
 86  439  OP_BC_BRANCH        [17 / 85/  0]  br 294 ? bb.45 : bb.87

 87  440  OP_BC_COPY          [34 /174/  4]  cp 2 -> 298
 87  441  OP_BC_TRUNC         [14 / 71/  1]  299 = 298 trunc ffffffffffffffff
 87  442  OP_BC_XOR           [13 / 66/  1]  300 = 299 ^ 29
 87  443  OP_BC_STORE         [38 /191/  1]  store 300 -> p.28
 87  444  OP_BC_ADD           [1  /  9/  0]  301 = 23 + 455
 87  445  OP_BC_ICMP_ULT      [25 /129/  4]  302 = (301 < 22)
 87  446  OP_BC_COPY          [34 /174/  4]  cp 301 -> 11
 87  447  OP_BC_BRANCH        [17 / 85/  0]  br 302 ? bb.2 : bb.92

 88  448  OP_BC_JMP           [18 / 90/  0]  jmp bb.92

 89  449  OP_BC_JMP           [18 / 90/  0]  jmp bb.92

 90  450  OP_BC_JMP           [18 / 90/  0]  jmp bb.92

 91  451  OP_BC_JMP           [18 / 90/  0]  jmp bb.92

 92  452  OP_BC_RET           [19 / 98/  3]  ret 456
------------------------------------------------------------------------
